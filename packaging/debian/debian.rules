#!/usr/bin/make -f

export DH_VERBOSE=1
export THIRDPARTY=3rdparty
export THIRDPARTY_SRC=${THIRDPARTY}/build/src

export GRDIR=/usr/gr
export DEB_BUILD_ROOT=/usr/src/packages/BUILD/debian
#export DEB_BUILD_ROOT=/home/felder/dpkg/gr/debian

DISTRIBUTION_NAME := $(shell grep -Po '^NAME=.*?\K[^"]+' /etc/os-release)
DISTRIBUTION_VERSION := $(shell grep -Po '^VERSION_ID=.*?\K[^"]+' /etc/os-release)

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
ifeq ( $(wildcard /usr/lib/$(DEB_HOST_MULTIARCH)/qt5/bin/qmake), )
	QT5_QMAKE=qmake-qt5
else
	QT5_QMAKE=/usr/lib/$(DEB_HOST_MULTIARCH)/qt5/bin/qmake
endif

%:
	dh $@

override_dh_auto_configure:
	mkdir -p ${THIRDPARTY_SRC}
	cp ../SOURCES/libogg-1.3.2.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/libtheora-1.1.1.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/libvpx-1.4.0.tar.bz2 ${THIRDPARTY_SRC}
	cp ../SOURCES/ffmpeg-5.1.4.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/glfw-3.3.3.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/zeromq-4.3.4.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/cairo-1.16.0.tar.xz ${THIRDPARTY_SRC}
	cp ../SOURCES/pixman-0.42.2.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/tiff-4.7.0.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/libopenh264-2.0.0.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/xerces-c-3.2.4.tar.gz ${THIRDPARTY_SRC}
	cp ../SOURCES/icu4c-74.2.tar.gz ${THIRDPARTY_SRC}
	tar -C ${THIRDPARTY} -xf ../SOURCES/cmake-3.23.0-linux-x86_64.tar.gz

override_dh_auto_build:
	# Ubuntu 20.04 and earlier ship with an too old CMake version
	if [ "$(DISTRIBUTION_NAME)" = "Ubuntu" ] && \
	    [ "$$(echo $(DISTRIBUTION_VERSION) | tr -d .)" -le "2004" ]; \
	then \
	    export PATH="$$(pwd)/$(THIRDPARTY)/cmake-3.23.0-linux-x86_64/bin:$${PATH}"; \
	fi; \
	make -C 3rdparty default extras && \
	cmake \
	    -DCMAKE_INSTALL_PREFIX=${GRDIR} \
	    -DCMAKE_BUILD_TYPE=Release \
	    -DGR_USE_BUNDLED_LIBRARIES=ON \
	    -S . \
	    -B build && \
	cmake --build build

override_dh_auto_install:
	install -m 755 -d ${DEB_BUILD_ROOT}/gr${GRDIR}
	# Ubuntu 20.04 and earlier ship with an too old CMake version
	if [ "$(DISTRIBUTION_NAME)" = "Ubuntu" ] && \
	    [ "$$(echo $(DISTRIBUTION_VERSION) | tr -d .)" -le "2004" ]; \
	then \
	    export PATH="$$(pwd)/$(THIRDPARTY)/cmake-3.23.0-linux-x86_64/bin:$${PATH}"; \
	fi; \
	DESTDIR=${DEB_BUILD_ROOT}/gr cmake --install build
